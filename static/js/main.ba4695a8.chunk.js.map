{"version":3,"sources":["actions/index.js","store/index.js","components/ToggleButtonGroup.js","components/RescheduleDialog.js","components/FormSubmit.js","components/Loading.js","components/PageContainer.js","components/Results.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["showDialog","store","open","console","log","openStatus","setState","state","addToCustomers","data","newUserValue","customers","push","deleteUsers","user","index","indexOf","splice","editUsers","foundIndex","findIndex","x","id","highlightUser","highlighted","updateUsers","email","first","last","pass","activeUser","updatedUser","openDialog","useGlobal","globalHook","React","actions","makeStyles","theme","paper","display","border","palette","divider","flexWrap","margin","spacing","buttonRoot","backgroundColor","color","borderRadius","withStyles","root","grouped","ToggleButtonGroup","buttonPrime","buttonSecond","useStyles","fontWeight","width","marginTop","padding","FormSubmit","props","history","useHistory","classes","globalActions","useState","name","setName","gender","setGender","maritalStatus","setMaritalStatus","dob","setDOB","interger","setInterger","personObject","className","onSubmit","evt","preventDefault","onHappened","setTimeout","type","value","onChange","e","target","style","height","Button","Transition","ref","Slide","direction","Loading","Dialog","TransitionComponent","keepMounted","aria-describedby","PaperProps","maxWidth","boxShadow","flexGrow","menuButton","marginRight","title","navBarColor","PageContainer","setOpen","paddingTop","alignItems","flexDirection","appointment","cursor","justifyContent","marginBottom","buttonDiv","alignSelf","Results","map","customer","i","NavBar","AppBar","position","Toolbar","Typography","variant","onClick","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba4695a8.chunk.js","sourcesContent":["// export const confirmedAppointment = (store, appointment) => {\n//   const confirmed = store.state.confirmedAppointments.push(appointment);\n//   store.setState();\n\n// };\n\nexport const showDialog = (store, open) => {\n  console.log(open);\n  const openStatus = open;\n  store.setState({ showDialog: openStatus });\n  console.log(store.state);\n};\n\n// export const closeDialog = (store, close) => {\n//   console.log(close);\n//   const closeStatus = close;\n//   store.setState({ showDialog: closeStatus });\n// };\n\n\nexport const addToCustomers = (store, data) => {\n  const newUserValue = store.state.customers.push(data);\n  store.setState({ newUserValue });\n};\n\nexport const deleteUsers = (store, user) =>  {\n    var index = store.state.user.indexOf(user);\n    if (index > -1) {\n        store.state.user.splice(index, 1);\n    }\n}\n\nexport const editUsers = (store, user) =>  {\n  var foundIndex =  store.state.user.findIndex(x => x.id == user.id);\n  const highlightUser = store.state.user[foundIndex] = user;\n    store.setState({ highlighted: highlightUser });\n}\n\nexport const updateUsers = (store, data) =>  {\n  const newEmail = store.state.highlighted.email = data.email;\n  const newFirst = store.state.highlighted.first = data.first;\n  const newLast = store.state.highlighted.last = data.last;\n  const newPass = store.state.highlighted.pass = data.pass;\n  // console.log(newProp)\n  // console.log(store.state)\n  var activeUser = store.state.highlighted;\n  var foundIndex =  store.state.user.findIndex(x => x.id == activeUser.id);\n  const updatedUser = store.state.user[foundIndex] = activeUser;\n  store.setState({  updatedUser });\n// console.log(newProp)\n  //   // const highlightUser = user;\n  //   store.setState({ highlighted: highlightUser });\n}\n\nexport const openDialog = (store, open) =>  {\n  const openStatus = open;\n  store.setState({ open: openStatus });\n}","import React from \"react\";\nimport globalHook from \"use-global-hook\";\nimport * as actions from \"../actions\";\n\nconst initialState = {\n  showDialog: false,\n  customers: [],\n};\n\nconst useGlobal = globalHook(React, initialState, actions);\nexport default useGlobal;\n","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    display: 'flex',\n    border: `1px solid ${theme.palette.divider}`,\n    flexWrap: 'wrap',\n  },\n  divider: {\n    margin: theme.spacing(1, 0.5),\n  },\n  buttonRoot: {\n    backgroundColor: \"#47d5dc\",\n    color: \"white\",\n    borderRadius: 20,\n    margin: 3,\n    \"&:hover\": {\n      backgroundColor: \"#47d5dc\",\n    }\n  },\n}));\n\nconst StyledToggleButtonGroup = withStyles((theme) => ({\n  root: {\n   display: 'grid',\n },\n  grouped: {\n    margin: theme.spacing(0.5),\n    border: 'none',\n    '&:not(:first-child)': {\n      borderRadius: 20,\n    },\n    '&:first-child': {\n      borderRadius: 20,\n    },\n  },\n}))(ToggleButtonGroup);\n\nexport default function ToggleButtons() {\n  const [alignment, setAlignment] = React.useState('center');\n  const [formats, setFormats] = React.useState(() => ['italic']);\n\n  const handleFormat = (event, newFormats) => {\n    setFormats(newFormats);\n  };\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n    console.log(newAlignment)\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div>\n        <StyledToggleButtonGroup\n          orientation=\"horizontal\"\n          value={alignment}\n          exclusive\n          onChange={handleAlignment}\n          aria-label=\"text alignment\"\n        >\n          <ToggleButton classes={{\n            root: classes.buttonRoot,\n          }} value=\"bold\" aria-label=\"bold\">\n          January 2, 2021 12:30pm-1:30pm\n          </ToggleButton>\n          <ToggleButton classes={{\n            root: classes.buttonRoot,\n          }} value=\"italic\" aria-label=\"italic\">\n          January 2, 2021 12:30pm-1:30pm\n          </ToggleButton>\n          <ToggleButton classes={{\n            root: classes.buttonRoot,\n          }} value=\"underlined\" aria-label=\"underlined\">\n          January 2, 2021 12:30pm-1:30pm\n          </ToggleButton>\n          <ToggleButton classes={{\n            root: classes.buttonRoot,\n          }} value=\"color\" aria-label=\"color\">\n          January 2, 2021 12:30pm-1:30pm\n          </ToggleButton>\n        </StyledToggleButtonGroup>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useGlobal from \"../store\";\nimport ToggleButtons from \"./ToggleButtonGroup\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst useStyles = makeStyles((theme) => ({\n  buttonRoot: {\n    backgroundColor: \"#47d5dc\",\n    color: \"white\",\n    borderRadius: 20,\n    margin: 3,\n    \"&:hover\": {\n      backgroundColor: \"#47d5dc\",\n    },\n  },\n  buttonPrime: {\n    color: \"black\",\n    \"&:hover\": {},\n  },\n  buttonSecond: {\n    color: \"black\",\n    \"&:hover\": {},\n  },\n}));\n\nexport default function RescheduleDialog() {\n  const classes = useStyles();\n  const [globalState, globalActions] = useGlobal();\n  const [open, setOpen] = useGlobal((state) => state.showDialog);\n\n  const handleClickOpen = () => {\n    globalActions.showDialog(true);\n  };\n\n  const handleClose = () => {\n    globalActions.closeDialog(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          {\"Select a date and time to reschedule:\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            <ToggleButtons />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            classes={{\n              root: classes.buttonSecond,\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleClose}\n            classes={{\n              root: classes.buttonPrime,\n            }}\n          >\n            Reschedule\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles/FormSubmit.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport useGlobal from \"../store\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttonPrime: {\n    color: \"white\",\n    fontWeight: 600,\n    \"&:hover\": {\n      backgroundColor: \"#262626\",\n    },\n    backgroundColor: \"black\",\n    width: \"100%\",\n    marginTop: 20,\n    padding: 16,\n    borderRadius: 0,\n  },\n}));\n\nexport default function FormSubmit(props) {\n  const history = useHistory();\n  const classes = useStyles();\n  const [globalState, globalActions] = useGlobal();\n  const [open, setOpen] = useGlobal((state) => state.showDialog);\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"Male\");\n  const [maritalStatus, setMaritalStatus] = useState(\"Single\");\n  const [dob, setDOB] = useState(\"\");\n  const [interger, setInterger] = useState(\"\");\n  let personObject = {\n    name: name,\n    gender: gender,\n    maritalStatus: maritalStatus,\n    dob: dob,\n    interger: interger,\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    props.onHappened();\n\n    setTimeout(() => {\n      globalActions.addToCustomers(personObject);\n      history.push(`/results`);\n    }, 2000);\n  };\n\n  return (\n    <form className=\"form-div\" onSubmit={handleSubmit}>\n      <h1 className=\"header-text\">We've got you covered!</h1>\n      <div className=\"form-flex\">\n        <div className=\"input-flex\">\n          <label>Name</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            className=\"searchInput\"\n            style={{\n              borderRadius: 0,\n              height: 10,\n              color: \"black\",\n              padding: 20,\n            }}\n          />\n        </div>\n        <div className=\"input-flex\">\n          <label>Gender</label>\n          <select\n            value={gender}\n            onChange={(e) => setGender(e.target.value)}\n            className=\"\"\n            style={{\n              borderRadius: 0,\n              color: \"black\",\n              padding: 16.5,\n              border: \"4px solid black\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            <option value=\"Nonconforming\">Nonconforming</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"form-flex\">\n        <div className=\"input-flex\">\n          <label>Marital Status</label>\n          <select\n            value={maritalStatus}\n            onChange={(e) => setMaritalStatus(e.target.value)}\n            className=\"\"\n            style={{\n              borderRadius: 0,\n              color: \"black\",\n              padding: 16.5,\n              border: \"4px solid black\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <option value=\"Single\">Single</option>\n            <option value=\"Married\">Married</option>\n          </select>\n        </div>\n        <div className=\"input-flex\">\n          <label>Date of Birth</label>\n          <input\n            type=\"text\"\n            value={dob}\n            onChange={(e) => setDOB(e.target.value)}\n            className=\"searchInput\"\n            style={{\n              borderRadius: 0,\n              height: 10,\n              color: \"black\",\n              padding: 20,\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"form-flex\">\n        <div className=\"last-input\">\n          <label>Number</label>\n          <input\n            type=\"text\"\n            value={interger}\n            onChange={(e) => setInterger(e.target.value)}\n            className=\"searchInput\"\n            style={{\n              borderRadius: 0,\n              height: 10,\n              color: \"black\",\n              padding: 20,\n            }}\n          />\n        </div>\n      </div>\n      <Button\n        type=\"submit\"\n        value=\"Submit\"\n        classes={{\n          root: classes.buttonPrime,\n        }}\n        // onClick={props.onHappened}\n      >\n        Submit\n      </Button>\n    </form>\n  );\n}\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport \"../styles/Loading.css\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport useGlobal from \"../store\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function Loading(props) {\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        TransitionComponent={Transition}\n        keepMounted\n        // onClose={handleClose}\n        aria-describedby=\"alert-dialog-slide-description\"\n        PaperProps={{\n          style: {\n            backgroundColor: \"transparent\",\n            maxWidth: \"65%\",\n            boxShadow: \"none\",\n          },\n        }}\n      >\n        <div className=\"load-wrapp\">\n          <div className=\"load-3\">\n            <div className=\"line\"></div>\n            <div className=\"line\"></div>\n            <div className=\"line\"></div>\n          </div>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles/Form.css\";\nimport RescheduleDialog from \"./RescheduleDialog\";\n\nimport FormSubmit from \"./FormSubmit\";\nimport Loading from \"./Loading\";\n\n// import { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useGlobal from \"../store\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  navBarColor: {\n    backgroundColor: \"#2C2C2C\",\n  },\n}));\n\nexport default function PageContainer(props) {\n  const classes = useStyles();\n  const [globalState, globalActions] = useGlobal();\n  const [open, setOpen] = useState(false);\n\n  // useEffect(() => {\n  //   console.log(globalState);\n  //   // Update the document title using the browser API\n  // }, [open]);\n\n\n  const thisHappened = () => {\n    console.log(\"clicking\")\n    setOpen(true)\n  }\n\n  return (\n    <div className={classes.root}>\n      {/* <RescheduleDialog /> */}\n\n      <Loading open={open}/>\n      <header className=\"button-container\">\n        <div className=\"faq-button\">\n          <FormSubmit onHappened={thisHappened}  />\n        </div>\n        <div className=\"check-your-balance-button\">\n          <h1>We've got you covered!</h1>\n        </div>\n      </header>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useState, useEffect, useCallback, updateState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport useGlobal from \"../store\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    paddingTop:100,\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  appointment: {\n    backgroundColor: \"#efefef\",\n    borderRadius: 8,\n    height: 50,\n    cursor: \"pointer\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: 10,\n    justifyContent: \"space-between\",\n    color: \"black\",\n    marginBottom: 5,\n    color: \"#636161\",\n    width: \"95%\"\n  },\n  buttonDiv: {\n    alignSelf: \"flex-end\",\n    display: \"flex\",\n    flexDirection: 'row',\n    padding: 5\n  },\n  buttonRoot: {\n    backgroundColor: \"#47d5dc\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"#47d5dc\",\n    }\n  },\n  buttonSecond: {\n    backgroundColor: \"#a9a9a9\",\n    color: \"white\",\n    marginRight: 3,\n    \"&:hover\": {\n      backgroundColor: \"#a9a9a9\",\n    }\n  }\n}));\n\n\nexport default function Results() {\n  const classes = useStyles();\n  const [sortedAppointments, setSortedAppointments] = useState([])\n  const [customers] = useGlobal((state) => state.customers);\n  // name: name,\n  // gender: gender,\n  // maritalStatus: maritalStatus,\n  // dob: dob,\n  // interger: interger,\n\n  return (\n    <div className={classes.root}>\n      {customers.map((customer, i) => (\n      <div key={i} className={classes.appointment}>\n      <h6>{customer.name}</h6>\n      <h6>{customer.gender}</h6>\n      <h6>{customer.maritalStatus}</h6>\n      <h6>{customer.dob}</h6>\n      <h6>{customer.interger}</h6>\n      <div className={classes.buttonDiv}>\n      <Button classes={{\n        root: classes.buttonSecond,\n      }}>Confirm</Button>\n      <Button classes={{\n        root: classes.buttonRoot,\n      }}>Reschedule</Button>\n      </div>\n      </div>\n      ))}\n    </div>\n  )\n}\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: \"black\",\n  },\n  navBarColor: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function NavBar(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n\n  const homeView = () => {\n    history.push(`/covered`);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.navBarColor}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            PetDesk Appointments\n          </Typography>\n\n          <Button color=\"inherit\" onClick={homeView}>\n            Confirmed Appointments\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport PageContainer from \"./components/PageContainer\";\nimport Results from \"./components/Results\";\nimport NavBar from \"./components/NavBar\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <NavBar />\n        <Switch>\n          <Route exact path=\"/covered\" component={PageContainer} />\n          <Route exact path=\"/results\" component={Results} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}